#!/usr/bin/env node

const { Client } = require('pg');
const request = require('request-promise');
const TelegramBot = require('node-telegram-bot-api');

// Needed to avoid anoying alert from node telegram bot api package. https://github.com/yagop/node-telegram-bot-api/issues/319
process.env.NTBA_FIX_319 = true;

const { TELEGRAM_BOT_TOKEN, CHANNEL_ID, API_URL, DATABASE_URL } = process.env;
const STATUS_MAP = {
  'Test': 0,
  'Normal': 1,
}

const bot = new TelegramBot(TELEGRAM_BOT_TOKEN);

const client = new Client({
  connectionString: DATABASE_URL
});

let currentStatus = request({
  uri: API_URL,
  json: true
}).then(function(response) {
  return response.items.reduce(function(acc, line) {
    acc[line.ubicacion_nombre_corto] = line.estado;
    return acc;
  }, {})
});

(async function() {
  await client.connect().catch((e) => {console.log(e)});

  let res = client.query('SELECT * FROM subways');

  res = await res;
  currentStatus = await currentStatus;

  const procs = [];

  res.rows.forEach(function(row) {
    if (!row.line) return;

    const line = String.fromCharCode(row.line);
    const status = row.status;

    if (currentStatus.hasOwnProperty(line) && row.status !== STATUS_MAP[currentStatus[line]]) {
      procs.push(client.query('UPDATE subways SET status = $1 WHERE line = $2', [STATUS_MAP[currentStatus[line]], line.charCodeAt(0)]));
      const prevState = Object.keys(STATUS_MAP).filter((key) => STATUS_MAP[key] === row.status);
      const message = `TEST: La linea ${line} cambi√≥ de estado ${prevState} a ${currentStatus[line]}`;
      console.log(message);
      procs.push(bot.sendMessage(CHANNEL_ID, message));
    }
  })

  await Promise.all(procs);

  await client.end();
})()
